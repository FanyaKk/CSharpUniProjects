using System;

namespace KidsToyStore
{
    class Program
    {
        static void Main(string[] args)
        {
            double excursionPrice = double.Parse(Console.ReadLine());
            int puzzlesCount = int.Parse(Console.ReadLine());
            int dollCount = int.Parse(Console.ReadLine());
            int bearCount = int.Parse(Console.ReadLine());
            int minionCount = int.Parse(Console.ReadLine());
            int truckCount = int.Parse(Console.ReadLine());

            double puzzlesPrice = puzzlesCount * 2.60;
            double dollPrice = dollCount * 3;
            double bearPrice = bearCount * 4.10;
            double minionPrice = minionCount * 8.20;
            double truckPrice = truckCount * 2;

            double allToys = puzzlesCount + dollCount + bearCount + minionCount + truckCount; //броя на всички поръчани играчки
            double totalPrice = puzzlesPrice + dollPrice + bearPrice + minionPrice + truckPrice; //общата стойност на всички поръчани играчки
            double discount = 0.0;// тук се пази стойността на отстъпката

            if (allToys >= 50) //проверка в случаите, когато поръчаният брой играчки е 50 или повече
            {
                discount = totalPrice * 0.25; // умножавайки общата стойност на направена поръчка * 0,25 получаваме стпойността на отсъпка от 25% върху цялата сума.
            }

            double totalToysPrice = totalPrice - discount;// общата стойност на поръчкта = цялата сума - отсъпката (25%), или от общата стойност на поръчката изваждаме стойността на отстъпката, която сме получили и се получава крайната цена на цялата поръчка!
            double totalMoney = totalToysPrice - (totalToysPrice * 0.10); // общата стойност след плащане на наема = общата стойност на поръчкта - (общата стойност на поръчката * 10%) - Иначе казано, от крайната стойност се дават 10% за наем на магазина. За да получим чистата печалба от продажбата, трябва от стойността на спечелената сума от поръчката да извадим стойността на наема!

            if (excursionPrice <= totalMoney) //проверка за случаите когато цената на екскурзията е по-малка от чистата печалба на поръчката
            {
                Console.WriteLine("Yes! {0:f2} lv left.", totalMoney - excursionPrice); // изпринтваме резултата с текст "Yes" + разликата от цената на екскурзията до чистата печлба
            }
            else // във всички останали случаи
            {
                Console.WriteLine("Not enough money! {0:f2} lv needed.", excursionPrice - totalMoney);// недостатъчно пари + стойността на сумата, която не достига ( получаваме я, акто от сумата за екскурзията извадим чистата печалба )
            }
        }
    }
}
//Магазин за детски играчки
//Петя има магазин за детски играчки.Тя получава голяма поръчка, която трябва да изпълни. С парите, които
//ще спечели иска да отиде на екскурзия. Да се напише програма, която пресмята печалбата от поръчката.
//Цени на играчките:
// Пъзел - 2.60 лв.
// Говореща кукла - 3 лв.
// Плюшено мече - 4.10 лв.
// Миньон - 8.20 лв.
// Камионче - 2 лв.
//Ако поръчаните играчки са 50 или повече магазинът прави отстъпка 25% от общата цена.От спечелените
//пари Петя трябва да даде 10% за наема на магазина. Да се пресметне дали парите ще ѝ стигнат да отиде на
//екскурзия.
//Вход
//От конзолата се четат 6 реда:
//1. Цена на екскурзията - реално число в интервала [1.00 … 10000.00]
//2. Брой пъзели - цяло число в интервала [0… 1000]
//3. Брой говорещи кукли - цяло число в интервала [0 … 1000]
//4. Брой плюшени мечета - цяло число в интервала [0 … 1000]
//5. Брой миньони - цяло число в интервала [0 … 1000]
//6. Брой камиончета - цяло число в интервала [0 … 1000]
//Изход
//На конзолата се отпечатва:
// Ако парите са достатъчни се отпечатва:
//o "Yes! {оставащите пари} lv left.";
// Ако парите НЕ са достатъчни се отпечатва:
//o "Not enough money! {недостигащите пари} lv needed.";
//Резултатът трябва да се форматира до втория знак след десетичната запетая.